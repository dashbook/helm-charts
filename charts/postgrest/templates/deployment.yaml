apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgrest.fullname" . }}
  labels:
    {{- include "postgrest.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "postgrest.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgrest.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgrest.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName | quote }}
                  key: username
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName | quote }}
                  key: password
            - name: PG_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.database.configName | quote }}
                  key: host
            - name: PG_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.database.configName | quote }}
                  key: port
            - name: PG_DATABASE
              value: "postgres"
            - name: PGRST_DB_URI
              value: "postgres://$(PG_USER):$(PG_PASSWORD)@$(PG_HOST):$(PG_PORT)/$(PG_DATABASE)" 
            - name: PGRST_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName | quote }}
                  key: auth-secret
            - name: PGRST_DB_ANON_ROLE
              value: anon
            - name: PGRST_DB_PREPARED_STATEMENTS
              value: "false"
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
